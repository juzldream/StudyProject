grep：文本过滤器
	grep 'pattern' imput_file ...
	
sed：流编辑器

awk：报告生成器
	格式化后：显示
	
nawk gwak 

	eg；
			[aiobs@CMNET-AIOBS2 ~]$ which awk
			/usr/bin/awk
			[aiobs@CMNET-AIOBS2 ~]$ ll /usr/bin/awk
			lrwxrwxrwx. 1 root root 14 Oct 19  2016 /usr/bin/awk -> ../../bin/gawk


AWK a.k.a Aho,Kernighan and Weinberger

# awk [options] 'script' file1 file2 ,...
# awk [options] 'PATTENR {action}' file1 file2,...

[aiobs@CMNET-AIOBS2 ~]$ awk '{print $0}' /etc/hosts
127.0.0.1   CMNET-AIOBS2 localhost localhost.localdomain localhost4 localhost4.localdomain4

[aiobs@CMNET-AIOBS2 ~]$ awk '{print $1,$2}' /etc/hosts
127.0.0.1 CMNET-AIOBS2

[aiobs@CMNET-AIOBS2 ~]$ awk 'BEGIN{OFS="|"}{print $1,$2}' /etc/hosts
127.0.0.1|CMNET-AIOBS2
::1|CMNET-AIOBS2
[aiobs@CMNET-AIOBS2 ~]$ awk 'BEGIN{OFS=":"}{print $1,$2,$3,$4}' /etc/hosts
127.0.0.1:CMNET-AIOBS2:localhost:localhost.localdomain

[aiobs@CMNET-AIOBS2 ~]$ awk 'BEGIN{OFS=":"}{print $1,"juzldream",$2,$3,$4}' /etc/hosts
127.0.0.1:juzldream:CMNET-AIOBS2:localhost:localhost.localdomain



一、print 使用

	pring item1,item2 ...
	
	[aiobs@CMNET-AIOBS2 ~]$ awk 'BEGIN {print "line one\nlinet two\nline three"}'
	line one
	linet two
	line three
	
	[aiobs@CMNET-AIOBS2 ~]$ awk -F : '{print $1,$3}' /etc/passwd
	zhaceming 508
	jtcjxz 509
	fsdtest 510
	zabbix 511
	kdcs 512
	...

二、awk变量
	2.1 awk内置变量之记录变量
	FS：Field separator 读取文件时，所使用字段分隔符；
	RS：Record separator 输入文件信息所使用的换行符；
	OFS：Output Filed Separtor
	ORS：Output Row Separator
	
	awk -F:
	OFS='#'
	FS=":"

	2.2 awk内置变量之数据变量
	
	NR：the number of input recods ，awk命令所处理的记录数，如果有多个文件，这个数目会把处理的多个文件中行统计计数；
	NF：Number of field 当前记录的field个数
	FNR：记录各个文件行数
	[aiobs@CMNET-AIOBS2 bms]$ cat /etc/passwd | grep zabbix | awk -F: '{print NF}'
	7
	[aiobs@CMNET-AIOBS2 bms]$ cat /etc/passwd | grep zabbix | awk -F: '{print $NF}'
	/sbin/nologin
	
	[aiobs@CMNET-AIOBS2 bms]$ awk '{print FNR}' /etc/passwd /etc/hosts   #打印这两个文件行数，各自计数
	[aiobs@CMNET-AIOBS2 bms]$ awk '{print NR}' /etc/passwd /etc/hosts
	
	
	
	
	2.3 用户自定义变量
	
	[aiobs@CMNET-AIOBS2 bms]$ awk -v test="hello awk" 'BEGIN{print test}'
	hello awk
	[aiobs@CMNET-AIOBS2 bms]$ awk 'BEGIN{test="hello awk"; print test}'
	hello awk
	[aiobs@CMNET-AIOBS2 bms]$ 

三、printf
	printf format , item1,item2,...
	
		format 格式如下：
			%c：显示字符ASCII码
			%d,%i：十进制整数
			%e，%E：科学计数法显示数值
			%f：显示浮点数
			%g，%G：科学计数法或浮点数显示
			%s：显示字符串
			%u：无符号整数
			%%：显示%自身
			
			修饰符：
				N：显示宽带
				-：左对齐
				+：显示数值符合
				
			bg：
				awk -F: '{printf "%-15s %i\n",$1,$2}' /etc/passwd
				awk -F: '{printf "%5d",$3}' /etc/passwd
	   		awk -F: '{printf "%-5d\n",$3}' /etc/passwd

六、awk操作符

	6.1 算术操作符
		-x ：负值
		+x ：转换为数值
		x^y :
		x**y ：x的y次方
		x*y ：
		x/y ：
		x+y ：
		x-y ：
		x%y ：取余
		
	6.2 字符串操作发
	
	6.3 赋值操作符
		=
		+=
		-=
		*=
		/=
		%=
		^=
		**=
		
		++
		--
	
	6.4 布尔值
	
		awk 中，任何非0或非空字符串都为真，反之就为假
		
	6.5 比较操作符
	
		x < y
		x <= y
		x > y
		x >= y
		x == y
		x != y
		x ~ y
		x !~ y
		
	6.6 表达式间逻辑关系
	
		&&
		||
	
	6.7 条件表达式
	
		selector?if-true-exp:if-false-exp （三目运算符）
		if 	selector;then
		  if-true-exp
		else
		  if-false-exp
		fi
		
		a=3
		b=4
		a>b?a is max:b is max
		
	6.8 函数调用
	
		function_name(para1,para2)
	
	


七、awk模式

	7.1 常见模式
		7.1.1 正则表达式
		[aiobs@CMNET-AIOBS2 ~]$ awk -F : '/^r/{print $1}' /etc/passwd     #显示以r开头的用户账号
		root
		rpc
		rtkit
		rpcuser
		
		7.1.2 表达式
		[aiobs@CMNET-AIOBS2 ~]$ awk -F : '$3>=500{print $1,$3}' /etc/passwd  #显示用户ID号大于等于500的用户
		aiobs 501
		xzdnsaipso 504
		alipms 506
		zhaceming 508
		jtcjxz 509
		zabbix 511
		...
		
		[aiobs@CMNET-AIOBS2 ~]$ awk -F : '$3+1>=500{print $1,$3}' /etc/passwd
		[aiobs@CMNET-AIOBS2 ~]$ awk -F : '$7~"bash$"{print $1,$7}' /etc/passwd  #显示以/bin/bash的用户
		root /bin/bash
		alipms /bin/bash
		...
		awk -F : '$7!~"bash$"{print $1,$7}' /etc/passwd   #用户不为bash的用户
		
		[aiobs@CMNET-AIOBS2 ~]$ awk -F : '$1~"^a"{print $1,$7}' /etc/passwd   #显示以a开头的用户
		apache /sbin/nologin
		aiobs /bin/csh
		alipms /bin/bash
	  ... 
	
	
	
		7.1.2 指定范围
		[aiobs@CMNET-AIOBS2 ~]$ awk -F : '$3==0,$7~"nologin"{print $1,$3,$7}' /etc/passwd #匹配ID=0到bash为nologin的账号信息
		root 0 /bin/bash
		bin 1 /sbin/nologin
		
		7.1.3 BEDIN 、END模式
		[aiobs@CMNET-AIOBS2 ~]$ awk -F : 'BEGIN{print "UserName UID Shell"}{printf "%-10s%-10s%+30s\n",$1,$3,$7}' /etc/passwd  #BEGIN打印标题
		UserName UID Shell
		root      0                              /bin/bash
		bin       1                          /sbin/nologin
		daemon    2                          /sbin/nologin
		...
		awk -F : 'BEGIN{print "UserName UID Shell"}{printf "%-10s%-10s%+30s\n",$1,$3,$7}END{print "END report."}' /etc/passwd #END打印接我标题
		...
		zabbix    511                        /sbin/nologin
		kdcs      512                            /bin/bash
		END report.
	
	7.2 常见Action
	
		7.2.1 表达式
		7.2.2 控制语句
		7.2.3 复合语句
		7.2.4 输入输出语句

八、控制语句
	8.1 if-else
		[aiobs@CMNET-AIOBS2 ~]$ awk -F : '{if($3==0)print $1,"Admin";else print $1,"common User"}' /etc/passwd  #如果UID等于0，打印用户为Admin，否则打印用户为普通用户
		root Admin
		zabbix common User
		kdcs common User
		
		[aiobs@CMNET-AIOBS2 ~]$ awk -F : 'BEGIN{print "UserName Usertype"}{if($1=="root")printf "%-15s: %s\n",$1,"Admin";else printf "%-15s: %s\n",$1,"common User"}' /etc/passwd
		UserName Usertype
		root           : Admin
		bin            : common User
		daemon         : common User
		adm            : common User

		...
		
		[aiobs@CMNET-AIOBS2 ~]$ awk -F : -v sum=0 'BEGIN{print "User UID gt 500 number"}{if ($3>=500) sum++}END{print sum}' /etc/passwd
		User UID gt 500 number
		14
	8.2 while
	8.3 do-while
	8.4 for
	8.5 case
	8.6 break 和 continue
	8.7 next

九、awk中使用数组（进阶，统计日志很重要！！！）

	9.1 数组
		[aiobs@CMNET-AIOBS2 ~]$ awk -F: '{shell[$NF]++}END{for(A in shell) {print A,shell[A]}}' /etc/passwd  #打印每种shell用户总数
		/bin/csh 2
		/bin/bash 11
		/sbin/nologin 46
		
		
		
		[aiobs@CMNET-AIOBS2 ~]$ netstat -tan | awk '/^tcp/{STATE[$NF]++}END{for(S in STATE) {print S,STATE[S]}}'   #打印tcp各连接状态总数
		TIME_WAIT 45
		CLOSE_WAIT 31
		FIN_WAIT1 1
		FIN_WAIT2 1
		ESTABLISHED 155
		LISTEN 38
		
		cat named.response | awk -F "|" '{counts[$1]++};END{for(ip in counts) print ip,counts[ip]}'  #统计每个IP访问次数
		
		
十、awk内置函数

	split ：
	length ：返回string字符串的格式
	substr：
	systime()：取系统当前时间

	
---------------------------------------------------------------

