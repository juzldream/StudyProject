

防火墙：硬件、软件：规则（匹配标准，处理办法）


Framework：
	默认规则：
		开放：堵
		关闭：通
		
规则：匹配标准

	IP：SIP,DIP
	TCP：SPORT,DPORT 	SYN=1,FIN=0RST=0ACK=0;	SYN=1,ACK=1,FIN=0,RST=0;	ACK=1,SYN=0,RST=0,FIN=0(ESTABLISHED)
	UDP：SPORT,DPORT
	ICMP:icmp-type
	
数据报文过滤

hook function ： 钩子函数
	prerouting
	input
	output
	forward
	postrouting
	
	规则链：
		PREROUTING
		INPUT
		OUTPUT
		FORWARD
		POSTROUTING
		
filter（过滤）：表
	INPUT
	OUTPUT
	FORWARD

nat（地址转换）：表
	PREROUTING
	OUTPUT
	POSTROUTING
	
	
mangle（拆开、修改、封装报文首部）：表
	PREROUTING
	INPUT
	OUTPUT
	FORWARD
	POSTROUTING
	
	
raw（）：表
	PREROUTING
	OUTPUT
	

四表五链 ，表优先级为：raw mangle nat filter
	
支持自定义链，默认链无法删除

每个规则都有两个内置计数器
	被匹配的报文个数
	被匹配的报文大小之和
	
iptables [-t TABLE] COMMAND CHAIN [NUM] 匹配标准 -j 处理办法


匹配标准：
	通用匹配
		-s 指定源地址
		-d 指定目标地址
		-p （tcp|upd|icmp） 指定协议
		-i  INTERFACE 指定报文流入的接口
			可用于定义的标准链：PREROUTING、INPUT、FORWARD
		-o  INTERFACE 指定报文流出的接口
			可用于定义的标准链：OUTPUT、POSTROUTING、FORWARD
			
			
	扩展匹配  rpm -ql iptables	
		隐含扩展 ：不用特别指明由那个模块进行的扩展，因为此时使用 -p {tcp|upd|icmp}
			-p tcp
				--sport
				--dport
				--tcp-flags 
			-p icmp
				-icmp-tyep
					0 ：echo-reply
					8 ：echo-request
			-p udp
				--sport
				--dport
			
		显示扩展 ：必须指明由那个模块进行的扩展，在iptables中使用-m选项可完成此功能
			state：状态扩展
				结合ip_conntrack追踪回话状态
					NEW：新情求
					ESTABLISHED：已建立链接
					INCALIO：非法链接
					RELATED：相关联
				-m state --state NEW,ESTABLISHED -j ACCEPT
			multiport：离散端口匹配扩展
				--source-port
				--destination-ports
				--ports
				-multiport --destination-ports 21,22,80 -m state --state NEW -j ACCEPT
			iprange
				--src-range
				--dst-range

			iptables -A INPUT -p tcp -m -iprange --src-range 10.1.1.3-10.1.1.100 --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT

			connlimit 连接数限制
			iptables  -A  INPUT  -p  tcp  --syn   --dport   23   -m   connlimit --connlimit-above 2 -j REJECT

			limit  速率限定
				--limit RATE
				--limit-burst 
			string
				--algo {bm|kmp}
				--string pattern
			iptables -I INPUT -s 115.29.225.121 -d 111.11.208.2 -m string --algo kmp --string "henry" -j REJECT

-j TARGET [处理办法]	
	ACCEPT 通过
	DROP 丢弃
	REJECT 丢弃（不建议使用）
	
	iptables -t filter -A INPUT -s 172.16.0.0/16 -d 172.16.100.7 -j DROP

	
	
命令：
	管理规则
		-A ：附件一条规则，在链的尾部
		-I CHAIN [num] ：插入一条规则，插入为对应CHAIN上的第num条
		-D CHAIN [num] ：删除指定链中的第num条规则
		-R CHAIN [num] ：替换指定的规则
	管理链
		-F [CHAIN]： flush ，清空指定规则链,如果省略CHAIN，则删除对应表中的作用链
		-P ：指定链的默认策略
		-N ：指定一个新的空链
		-X ：删除一个自定义的空链
		-Z ：置零指定链中所有规则的计算器
		-E ：重命名自定义的链
	查看类：
		-L ：显示指定表中的规则
			-n ：以数字格式显示主机地址和端口号
			-x ：显示计算器的精确值
			-v ：显示详细信息
			-vv ：
			--line-number ：显示规则号码
		
动作（target）
	ACCEPT ：放行
	DROP ：丢弃
	REJECT ：拒绝
	SNAT ：源地址转换
	DNAT ：目标地址转换
	MASQUERADE ：地址伪装
	REDIRECT ：端口重定向
	MARK ：打标记
	LOG	：日志
	
log  记录请求日志

log
	--log-prefix prefix

# iptables -I INPUT 1 -s 115.29.225.121 -d 111.11.208.2 -p icmp --icmp-type 8 -j LOG --log-prefix "--firwall log for icmp--"
# tail -f /var/log/messages


	
lsmod | grep ip  ：查看启动的模块

案例：

202.98.232.2 （电信办公室网，固定IP地址）
101.249.254.249（宿舍电信网） 111.11.208.2 ssh/22  
															111.11.208.2 httpd/80（zabbix服务器）
1. 拒绝所有访问

iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP

2. 让101.249.0.0/16段地址可以ssh访问111.11.208.2这台服务器
101.249.0.0/16   111.11.208.2 ssh/22  

阿里云服务器
iptables -t filter -A INPUT -s 115.29.225.121 -d 111.11.208.2 -p tcp --dport 22 -j ACCEPT
iptables -t filter -A OUTPUT -s 111.11.208.2 -d 115.29.225.121 -p tcp --sport 22 -j ACCEPT

宿舍电信网
iptables -t filter -A INPUT -s 101.249.0.0/16 -d 111.11.208.2 -p tcp --dport 22 -j ACCEPT
iptables -t filter -A OUTPUT -s 111.11.208.2 -d 101.249.0.0/16 -p tcp --sport 22 -j ACCEPT


3. 允许101.249.0.0/16段地址可以访问111.11.208.2服务上的zabbix服务器即（httpd/80）

iptables -t filter -I INPUT -s 101.249.0.0/16 -d 111.11.208.2 -p tcp --dport 80 -j ACCEPT
iptables -t filter -I OUTPUT -s 111.11.208.2 -d 101.249.0.0/16 -p tcp --sport 80 -j ACCEPT


4. 本机能够ping通自己

ping 111.11.208.2 使用的是icmp协议 

iptables -t filter -A INPUT -s 127.0.0.1 -d 127.0.0.1 -i lo -j ACCEPT
iptables -t filter -A OUTPUT -s 127.0.0.1 -d 127.0.0.1 -o lo -j ACCEPT

5. 本机ping其他服务器，但是其他服务器不能ping通自己

iptables -A OUTPUT -s 111.11.208.2 -p icmp --icmp-type 8 -j ACCEPT
iptables -A INPUT -d 111.11.208.2 -p icmp --icmp-type 0 -j ACCEPT


	
6. dns 服务器 

iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP


ip_conntrack  链接追踪规则

iptables -t nat -L  这条命令会自动激活ip_conntrack模块
modprobe ip_conntrack 安装ip_conntrack模块



保存规则
# iptables-save > /etc/sysconfig/iptables.20191201
# iptables-restore < /etc/sysconfig/iptables.20191201


#service iptables save 

	/etc/sysconfig/iptables

问题：服务端只能是ESTABLISGED主动发送请求到客户端，其余状态都不行？

iptables -A INPUT -s 115.29.225.121 -d 111.11.208.2 -p tcp --dport 22 -m --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -s 111.11.208.2 -d 115.29.225.121 -p tcp --sport 22 -m --state ESTABLISHED -j ACCEPT


iptables -A INPUT -s 115.29.225.121 -d 111.11.208.2 -p tcp --dport 80 -m --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -s 111.11.208.2 -d 115.29.225.121 -p tcp --sport 80 -m --state ESTABLISHED -j ACCEPT


iptables -A INPUT -s 115.29.225.121 -d 111.11.208.2 -p icmp --icmp-type 8 -m --state  NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -s 111.11.208.2 -d 115.29.225.121 -p icmp --icmp-type 0 -m --state ESTABLISHED -j ACCEPT

ping通自己
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

ftp服务器策略

加载 ip_nat_ip ip_conntrack_ftp 两个模块
vim /etc/sysconfig/iptables-config
IPTABLES_MODULES="ip_nat_ip ip_conntrack_ftp"


iptables -A INPUT -s 115.29.225.121 -d 111.11.208.2 -p tcp --dport 21 -m --state RELATED,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -s 111.11.208.2 -d 115.29.225.121 -p tcp --sport 21 -m --state RELATED,ESTABLISHED -j ACCEPT

#为ESTABLISHED状态的所有IP、端口通信
iptables -A OUTPUT -s 111.11.208.2 -d 115.29.225.121 -m --state ESTABLISHED,RELATED -j ACCEPT 


iptstate 查看链接信息
cat /pro/net/ip_conntrace

sysctl -w net.ipv4.ip_conntrack_mak=65536  
/etc/sysctl.conf

# echo `pwd`
/proc/sys/net/netfilter
# cat `pwd`/nf_conntrack_icmp_timeout
30

-------------------------------------------------------------------

###3条通用策略

iptables -A INPUT -d 111.11.208.2 -p tcp -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A INPUT -d 111.11.208.2 -p tcp -m multiport --destination-ports 21,22,80 -m state --state NEW -j ACCEPT
iptables -A OUTPUT -s 111.11.208.2 -m state --state ESTABLISHED,RELATED -j ACCEPT 

-------------------------------------------------------------------



利用iptables的recent模块抵御DOS工具

ssh 远程连接

iptables -I INPUT -p tcp --dport 22 -m connlimit --connlimit-above 3 -j DROP
iptables -I INPUT -p tcp --dport 22 -m state --state NEW -m recent --set--name SSH
iptables -I INPUT -p tcp --dport 22 -m state --state NEW -m recent --update --sceonds 300 --hitcount 3 --name SSH -j DROP


-------------------------------------------------------------------

nat地址转换

NAT：Network Address Translation

DNAT：目标地址转换
	-j DNAT 
	--to-destination 
SNAT：源地址转换（OUTPUT、POSTROUTING）
	-j SNAT
	--to-source 

实验环境：                         
client1  桥接网络模式         
		IPADDR=172.16.100.1
	    NETMASK=255.255.255.0
	    GETWAY=172.16.100.7

Service 
	 	eth0 172.16.100.7
		eth1 192.168.10.6
        NETMASK=255.255.255.0

client2 hostonly网络模式
   		IPADDR=192.168.10.7 
        NETMASK=255.255.255.0
        GETWAY=192.168.10.6

私网地址网段为 192.168.0.0 可以地址转换通过1.1.1.1 访问公网
iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -j SNAT --to-source 1.1.1.1

iptables -t nat -A 

tcpdump -i eth0 -nn -X icmp 

